// CashRegisterDay modeli - Günlük kasa kayıtları
model CashRegisterDay {
  id                  String          @id @default(cuid())
  date                DateTime        @default(now())
  status              CashDayStatus   @default(OPEN)
  openingBalance      Float           @default(0)
  expectedBalance     Float?          // Gün sonu beklenen bakiye
  actualBalance       Float?          // Sayılan fiziksel tutar
  difference          Float?          // Fark (expectedBalance - actualBalance)
  openedBy            String          // Açılışı yapan kullanıcı
  closedBy            String?         // Kapanışı yapan kullanıcı
  branchId            String          
  notes               String?         // Gün sonu notları
  openedAt            DateTime        @default(now())
  closedAt            DateTime?       // Kapanış zamanı
  
  // İlişkiler
  branch              Branch          @relation(fields: [branchId], references: [id], onDelete: Cascade)
  openedByUser        User            @relation("OpenedCashDays", fields: [openedBy], references: [id])
  closedByUser        User?           @relation("ClosedCashDays", fields: [closedBy], references: [id])
  transactions        CashRegisterLog[] // Bu güne ait kasa hareketleri
  
  @@index([date, branchId, status])
  @@map("cash_register_days")
}

// Mevcut CashRegisterLog modelini güncelleyelim
model CashRegisterLog {
  id                  String            @id @default(cuid())
  type                CashLogType
  amount              Float
  description         String?
  branchId            String
  userId              String
  referenceId         String?           // Fatura ödemesi, vb. için referans ID
  referenceType       String?           // Referansın tipi (invoice, appointment vb.)
  dayId               String?           // İlgili kasa günü ID'si
  createdAt           DateTime          @default(now())
  
  // İlişkiler
  branch              Branch            @relation(fields: [branchId], references: [id], onDelete: Cascade)
  user                User              @relation(fields: [userId], references: [id])
  payments            Payment[]
  cashDay             CashRegisterDay?  @relation(fields: [dayId], references: [id])

  @@map("cash_register_logs")
}

// Kasa günü durumu için enum
enum CashDayStatus {
  OPEN
  CLOSED
}

// Mevcut CashLogType enum'unu güncelleyelim
enum CashLogType {
  OPENING            // Gün açılışı
  CLOSING            // Gün kapanışı
  INVOICE_PAYMENT    // Fatura ödemesi
  MANUAL_INCOME      // Manuel gelir
  MANUAL_EXPENSE     // Manuel gider
}
